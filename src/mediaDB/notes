https://github.com/google/guava event sache raussuchen, als quelle angeben

access modifier am Ende überarbeiten


toclient 2 outputs geben
jede line hat zahl am Ende, über die die clients erfahren können, ob die Nachricht für sie bestimmt ist

import static org.mockito.Mockito.*;

Exceptions, die über die ganze hierarchie gehen, können an Stelle der Entstehung mit try catch abegafangen werden


GUI
* muss über events gehen, um IoC zu sichern
* wohl aber nicht übers netzwerk

Idee für Zusätzliche Anforderungen:
* NetworkEvent bekommt ein Absenderfeld
* wird an ToClientMessender übergeben
* Da steht gehardcoded, an welche socket o.ä. das Antwortevent gehen soll
    * jetzt so umgesetzt, dass an alle tcp sockets alles gesendet wird
    * client kann in serverresponseevent absender abrufen
* Falls GUIOut gesetzt ist, wird bei jeder Änderung an uploads oder producern eine Nachricht an die GUI gesendet
* Die holt sich dann die aktuellen Listen
* je view gibt es eine eventfactory, die mit dem Schlüsselwort konstruiert wird

serverresponseevent hat type bekommen
    darüber kann die gui rausfinden, was für eine Liste das ist, und wie sie verarbeitet werden soll
    uploadables und producer im normalen Fenster, uploader, content tag aus display mode in extra Fenster
    Eventannahme wie in client von net
    kann direkt zum ServerResponseEventListener weitergeleitet werden


Finale Aufgaben um Funktionalität zu sichern:
* Nötige mains identifizieren, in extra Ordner packen
* Nötige Argumente auslesen (Size, UDP)
* Testen versch. Eingaben in cli und gui



listeners.for!!!!!!!!!!!!!!!!!!!!!!!


random access file
muss nach Neustart der app funzen, dass es keine inkonsistenzen gibt
wenn daten geholt / gespiechert werden, repo layer benutzen


checked exceptions = erwartete exc.

current offset rei RAf serialisieren

listener -> eventBus -> serverresponseeventlistener -> net

server muss nach termination von einem client weiter funzen (?)

Einzelne aufgabenblätter lesen

udp buffer size prüfen, ob ausreichend

net Klassen testen?

Was passiert, wenn ein udp client bei einem tcp server versucht zu connecten

sout bei data changed in GL, anstatt observer